{"ast":null,"code":"(function () {\n  'use strict';\n\n  function setupConsoleTable() {\n    if (typeof console === 'undefined') {\n      throw new Error('Weird, console object is undefined');\n    }\n\n    if (typeof console.table === 'function') {\n      // if it is not OUR function, overwrite it\n      if (console.table === consoleTable) {\n        return;\n      }\n    }\n\n    function isType(t, x) {\n      return typeof x === t;\n    }\n\n    var isString = isType.bind(null, 'string');\n\n    function isArrayOf(isTypeFn, a) {\n      return Array.isArray(a) && a.every(isTypeFn);\n    }\n\n    var isArrayOfStrings = isArrayOf.bind(null, isString);\n    var isArrayOfArrays = isArrayOf.bind(null, Array.isArray);\n\n    var Table = require('easy-table');\n\n    function arrayToString(arr) {\n      var t = new Table();\n      arr.forEach(function (record) {\n        if (typeof record === 'string' || typeof record === 'number') {\n          t.cell('item', record);\n        } else {\n          // assume plain object\n          Object.keys(record).forEach(function (property) {\n            t.cell(property, record[property]);\n          });\n        }\n\n        t.newRow();\n      });\n      return t.toString();\n    }\n\n    function printTableWithColumnTitles(titles, items, noConsole) {\n      var t = new Table();\n      items.forEach(function (item) {\n        item.forEach(function (value, k) {\n          t.cell(titles[k], value);\n        });\n        t.newRow();\n      });\n      var str = t.toString();\n      return noConsole ? str : console.log(str);\n    }\n\n    function printTitleTable(title, arr) {\n      var str = arrayToString(arr);\n      var rowLength = str.indexOf('\\n');\n\n      if (rowLength > 0) {\n        if (title.length > rowLength) {\n          rowLength = title.length;\n        }\n\n        console.log(title);\n        var sep = '-',\n            k,\n            line = '';\n\n        for (k = 0; k < rowLength; k += 1) {\n          line += sep;\n        }\n\n        console.log(line);\n      }\n\n      console.log(str);\n    }\n\n    function getTitleTable(title, arr) {\n      var str = arrayToString(arr);\n      var rowLength = str.indexOf('\\n');\n      var strToReturn = '';\n\n      if (rowLength > 0) {\n        if (title.length > rowLength) {\n          rowLength = title.length;\n        }\n\n        strToReturn += title + '\\n';\n        var sep = '-',\n            k,\n            line = '';\n\n        for (k = 0; k < rowLength; k += 1) {\n          line += sep;\n        }\n\n        strToReturn += line + '\\n';\n      }\n\n      return strToReturn + str;\n    }\n\n    function objectToArray(obj) {\n      var keys = Object.keys(obj);\n      return keys.map(function (key) {\n        return {\n          key: key,\n          value: obj[key]\n        };\n      });\n    }\n\n    function objectToString(obj) {\n      return arrayToString(objectToArray(obj));\n    }\n\n    function consoleTable() {\n      var args = Array.prototype.slice.call(arguments);\n\n      if (args.length === 2 && typeof args[0] === 'string' && Array.isArray(args[1])) {\n        return printTitleTable(args[0], args[1]);\n      }\n\n      if (args.length === 2 && isArrayOfStrings(args[0]) && isArrayOfArrays(args[1])) {\n        return printTableWithColumnTitles(args[0], args[1]);\n      }\n\n      args.forEach(function (k) {\n        if (typeof k === 'string') {\n          return console.log(k);\n        } else if (Array.isArray(k)) {\n          console.log(arrayToString(k));\n        } else if (typeof k === 'object') {\n          console.log(objectToString(k));\n        }\n      });\n    }\n\n    module.exports.getTable = function () {\n      var args = Array.prototype.slice.call(arguments);\n      var strToReturn = '';\n\n      if (args.length === 2 && typeof args[0] === 'string' && Array.isArray(args[1])) {\n        return getTitleTable(args[0], args[1]);\n      }\n\n      if (args.length === 2 && isArrayOfStrings(args[0]) && isArrayOfArrays(args[1])) {\n        return printTableWithColumnTitles(args[0], args[1], true);\n      }\n\n      args.forEach(function (k, i) {\n        if (typeof k === 'string') {\n          strToReturn += k;\n\n          if (i !== args.length - 1) {\n            strToReturn += '\\n';\n          }\n\n          return;\n        } else if (Array.isArray(k)) {\n          strToReturn += arrayToString(k) + '\\n';\n        } else if (typeof k === 'object') {\n          strToReturn += objectToString(k);\n        }\n      });\n      return strToReturn;\n    };\n\n    console.table = consoleTable;\n  }\n\n  setupConsoleTable();\n})();","map":{"version":3,"sources":["/home/pneumato/latrueo-bot/node_modules/console.table/index.js"],"names":["setupConsoleTable","console","Error","table","consoleTable","isType","t","x","isString","bind","isArrayOf","isTypeFn","a","Array","isArray","every","isArrayOfStrings","isArrayOfArrays","Table","require","arrayToString","arr","forEach","record","cell","Object","keys","property","newRow","toString","printTableWithColumnTitles","titles","items","noConsole","item","value","k","str","log","printTitleTable","title","rowLength","indexOf","length","sep","line","getTitleTable","strToReturn","objectToArray","obj","map","key","objectToString","args","prototype","slice","call","arguments","module","exports","getTable","i"],"mappings":"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","sourcesContent":["(function () {\n  'use strict';\n\n  function setupConsoleTable() {\n    if (typeof console === 'undefined') {\n      throw new Error('Weird, console object is undefined');\n    }\n    if (typeof console.table === 'function') {\n      // if it is not OUR function, overwrite it\n      if (console.table === consoleTable) {\n        return;\n      }\n    }\n\n    function isType(t, x) {\n      return typeof x === t;\n    }\n\n    var isString = isType.bind(null, 'string');\n\n    function isArrayOf(isTypeFn, a) {\n      return Array.isArray(a) &&\n        a.every(isTypeFn);\n    }\n\n    var isArrayOfStrings = isArrayOf.bind(null, isString);\n    var isArrayOfArrays = isArrayOf.bind(null, Array.isArray);\n\n    var Table = require('easy-table');\n\n    function arrayToString(arr) {\n      var t = new Table();\n      arr.forEach(function (record) {\n        if (typeof record === 'string' ||\n          typeof record === 'number') {\n          t.cell('item', record);\n        } else {\n          // assume plain object\n          Object.keys(record).forEach(function (property) {\n            t.cell(property, record[property]);\n          });\n        }\n        t.newRow();\n      });\n      return t.toString();\n    }\n\n    function printTableWithColumnTitles(titles, items,noConsole) {\n      var t = new Table();\n      items.forEach(function (item) {\n        item.forEach(function (value, k) {\n          t.cell(titles[k], value);\n        });\n        t.newRow();\n      });\n      var str = t.toString();\n\n      return noConsole ? str : console.log(str);\n    }\n\n    function printTitleTable(title, arr) {\n      var str = arrayToString(arr);\n      var rowLength = str.indexOf('\\n');\n      if (rowLength > 0) {\n        if (title.length > rowLength) {\n          rowLength = title.length;\n        }\n        console.log(title);\n        var sep = '-', k, line = '';\n        for (k = 0; k < rowLength; k += 1) {\n          line += sep;\n       }\n        console.log(line);\n      }\n      console.log(str);\n    }\n\n    function getTitleTable(title, arr) {\n      var str = arrayToString(arr);\n      var rowLength = str.indexOf('\\n');\n      var strToReturn = '';\n      if (rowLength > 0) {\n        if (title.length > rowLength) {\n          rowLength = title.length;\n        }\n        \n        strToReturn += title + '\\n';\n        var sep = '-', k, line = '';\n        for (k = 0; k < rowLength; k += 1) {\n          line += sep;\n        }\n\t\n        strToReturn += line + '\\n';\n      }\n\n      return strToReturn + str;\n    }\n\n    function objectToArray(obj) {\n      var keys = Object.keys(obj);\n      return keys.map(function (key) {\n        return {\n          key: key,\n          value: obj[key]\n        };\n      });\n    }\n\n    function objectToString(obj) {\n      return arrayToString(objectToArray(obj));\n    }\n\n    function consoleTable () {\n      var args = Array.prototype.slice.call(arguments);\n\n      if (args.length === 2 &&\n        typeof args[0] === 'string' &&\n        Array.isArray(args[1])) {\n\n        return printTitleTable(args[0], args[1]);\n      }\n\n      if (args.length === 2 &&\n        isArrayOfStrings(args[0]) &&\n        isArrayOfArrays(args[1])) {\n        return printTableWithColumnTitles(args[0], args[1]);\n      }\n\n      args.forEach(function (k) {\n        if (typeof k === 'string') {\n          return console.log(k);\n        } else if (Array.isArray(k)) {\n          console.log(arrayToString(k));\n        } else if (typeof k === 'object') {\n          console.log(objectToString(k));\n        }\n      });\n    }\n\n    module.exports.getTable = function(){\n      var args = Array.prototype.slice.call(arguments);\n\n      var strToReturn = '';\n\n      if (args.length === 2 &&\n        typeof args[0] === 'string' &&\n        Array.isArray(args[1])) {\n\n        return getTitleTable(args[0], args[1]);\n      }\n\n      if (args.length === 2 &&\n        isArrayOfStrings(args[0]) &&\n        isArrayOfArrays(args[1])) {\n        return printTableWithColumnTitles(args[0], args[1],true);\n      }\n\n      args.forEach(function (k,i) {\n        if (typeof k === 'string') {\n          strToReturn += k;\n\t  if (i !== args.length - 1){\n\t    strToReturn += '\\n';\n\t  }\n          return ;\n        } else if (Array.isArray(k)) {\n          strToReturn += arrayToString(k) + '\\n';\n        } else if (typeof k === 'object') {\n          strToReturn += objectToString(k);\n        }\n      });\n\n      return strToReturn;\n    };\n\n    console.table = consoleTable;\n  }\n\n  setupConsoleTable();\n}());\n"]},"metadata":{},"sourceType":"script"}